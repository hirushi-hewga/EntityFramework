// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2024_09_23___HW__Fluient_API_;

#nullable disable

namespace _2024_09_23___HW__Fluient_API_.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20241105160314_AddTables")]
    partial class AddTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShops", (string)null);
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Products"
                        });
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Warsaw"
                        });
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Seller"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cashier"
                        });
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Discount = 0.1f,
                            IsInStock = true,
                            Name = "T-shirt",
                            Price = 300m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Discount = 0.2f,
                            IsInStock = true,
                            Name = "TV",
                            Price = 5000m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Discount = 0f,
                            IsInStock = true,
                            Name = "Bread",
                            Price = 20m,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "St. Lesi Ukrainka, 1",
                            CityId = 1,
                            Name = "Fashion Boutique",
                            ParkingArea = 5
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ave. Victories, 2",
                            CityId = 1,
                            Name = "Electronics",
                            ParkingArea = 10
                        },
                        new
                        {
                            Id = 3,
                            Address = "St. Hrushevsky, 3",
                            CityId = 2,
                            Name = "Supermarket",
                            ParkingArea = 15
                        });
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivan@gmail.com",
                            Name = "Ivan",
                            PhoneNumber = "+380123456789",
                            PositionId = 1,
                            Salary = 2000m,
                            ShopId = 1,
                            Surname = "Petrenko"
                        },
                        new
                        {
                            Id = 2,
                            Email = "olena@gmail.com",
                            Name = "Olena",
                            PhoneNumber = "+380987654321",
                            PositionId = 2,
                            Salary = 1500m,
                            ShopId = 2,
                            Surname = "Sydorenko"
                        },
                        new
                        {
                            Id = 3,
                            Email = "petro@gmail.com",
                            Name = "Petro",
                            PhoneNumber = "+380654321987",
                            PositionId = 3,
                            Salary = 1800m,
                            ShopId = 3,
                            Surname = "Kovalenko"
                        });
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("_2024_09_23___HW__Fluient_API_.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2024_09_23___HW__Fluient_API_.Entities.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.City", b =>
                {
                    b.HasOne("_2024_09_23___HW__Fluient_API_.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Product", b =>
                {
                    b.HasOne("_2024_09_23___HW__Fluient_API_.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Shop", b =>
                {
                    b.HasOne("_2024_09_23___HW__Fluient_API_.Entities.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Worker", b =>
                {
                    b.HasOne("_2024_09_23___HW__Fluient_API_.Entities.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2024_09_23___HW__Fluient_API_.Entities.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("_2024_09_23___HW__Fluient_API_.Entities.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
