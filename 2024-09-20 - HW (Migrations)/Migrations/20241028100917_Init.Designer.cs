// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2024_09_20___HW__Migrations_;

#nullable disable

namespace _2024_09_20___HW__Migrations_.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20241028100917_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlaylistTrack", b =>
                {
                    b.Property<int>("PlaylistsId")
                        .HasColumnType("int");

                    b.Property<int>("TracksId")
                        .HasColumnType("int");

                    b.HasKey("PlaylistsId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("PlaylistTrack");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("YearOfRelease")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            GenreId = 1,
                            Name = "Purpose",
                            YearOfRelease = new DateOnly(2015, 11, 13)
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            GenreId = 1,
                            Name = "1989",
                            YearOfRelease = new DateOnly(2014, 10, 27)
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            GenreId = 2,
                            Name = "Lemonade",
                            YearOfRelease = new DateOnly(2016, 4, 23)
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            GenreId = 3,
                            Name = "+ (Divide)",
                            YearOfRelease = new DateOnly(2017, 3, 3)
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            GenreId = 1,
                            Name = "FutureNostalgia",
                            YearOfRelease = new DateOnly(2020, 3, 27)
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 6,
                            GenreId = 1,
                            Name = "Rare",
                            YearOfRelease = new DateOnly(2020, 1, 10)
                        });
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Justin",
                            Surname = "Bieber"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Taylor",
                            Surname = "Swift"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Beyonce",
                            Surname = "Knowles"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Ed",
                            Surname = "Sheeran"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 3,
                            Name = "Dua",
                            Surname = "Lipa"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Selena",
                            Surname = "Gomez"
                        });
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "R&B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mood Music"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Emotional Songs"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Party"
                        });
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 2,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 3,
                            Name = "United Kingdom"
                        });
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "R&B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pop/Folk"
                        });
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Pop Hits"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "R&B Selection"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Name = "Mood Melodies"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "Emotional"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Name = "Party"
                        });
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Duration = new TimeOnly(0, 3, 25),
                            Name = "What Do You Mean?"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 2,
                            Duration = new TimeOnly(0, 3, 51),
                            Name = "Blank Space"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 3,
                            Duration = new TimeOnly(0, 3, 26),
                            Name = "Formation"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 4,
                            Duration = new TimeOnly(0, 4, 21),
                            Name = "Castle on the Hill"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 5,
                            Duration = new TimeOnly(0, 3, 3),
                            Name = "Don`t Start Now"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 6,
                            Duration = new TimeOnly(0, 3, 46),
                            Name = "Lose You to Love Me"
                        });
                });

            modelBuilder.Entity("PlaylistTrack", b =>
                {
                    b.HasOne("_2024_09_20___HW__Migrations_.Entities.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2024_09_20___HW__Migrations_.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Album", b =>
                {
                    b.HasOne("_2024_09_20___HW__Migrations_.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2024_09_20___HW__Migrations_.Entities.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Artist", b =>
                {
                    b.HasOne("_2024_09_20___HW__Migrations_.Entities.Country", "Country")
                        .WithMany("Artists")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Playlist", b =>
                {
                    b.HasOne("_2024_09_20___HW__Migrations_.Entities.Category", "Category")
                        .WithMany("Playlists")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Track", b =>
                {
                    b.HasOne("_2024_09_20___HW__Migrations_.Entities.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Category", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Country", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("_2024_09_20___HW__Migrations_.Entities.Genre", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
