// <auto-generated />
using System;
using Bookstore_Data_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookstore_Data_Access.Migrations
{
    [DbContext(typeof(BookstoreDbContext))]
    partial class BookstoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuthorSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuthorId");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "F. Scott",
                            AuthorSurname = "Fitzgerald"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Michelle",
                            AuthorSurname = "Obama"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Tara",
                            AuthorSurname = "Westover"
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "George",
                            AuthorSurname = "Orwell"
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "Harper",
                            AuthorSurname = "Lee"
                        },
                        new
                        {
                            AuthorId = 6,
                            AuthorName = "J.D.",
                            AuthorSurname = "Salinger"
                        },
                        new
                        {
                            AuthorId = 7,
                            AuthorName = "Anne",
                            AuthorSurname = "Frank"
                        },
                        new
                        {
                            AuthorId = 8,
                            AuthorName = "Yuval Noah",
                            AuthorSurname = "Harari"
                        });
                });

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContinuationBook")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YearOfRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            BookName = "The Great Gatsby",
                            ContinuationBook = "",
                            Cost = 10.99f,
                            GenreId = 1,
                            NumberOfPages = 180,
                            Price = 15.99f,
                            PublisherId = 1,
                            YearOfRelease = new DateTime(1925, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            BookName = "Tender Is the Night",
                            ContinuationBook = "The Great Gatsby",
                            Cost = 12.99f,
                            GenreId = 1,
                            NumberOfPages = 304,
                            Price = 18.99f,
                            PublisherId = 1,
                            YearOfRelease = new DateTime(1934, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2,
                            BookName = "Becoming",
                            ContinuationBook = "",
                            Cost = 15.99f,
                            GenreId = 2,
                            NumberOfPages = 400,
                            Price = 22.99f,
                            PublisherId = 2,
                            YearOfRelease = new DateTime(2018, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 3,
                            BookName = "Educated",
                            ContinuationBook = "",
                            Cost = 16.5f,
                            GenreId = 2,
                            NumberOfPages = 334,
                            Price = 24.99f,
                            PublisherId = 2,
                            YearOfRelease = new DateTime(2018, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 4,
                            BookName = "1984",
                            ContinuationBook = "",
                            Cost = 13.5f,
                            GenreId = 3,
                            NumberOfPages = 328,
                            Price = 20f,
                            PublisherId = 3,
                            YearOfRelease = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 5,
                            BookName = "To Kill a Mockingbird",
                            ContinuationBook = "",
                            Cost = 10.99f,
                            GenreId = 4,
                            NumberOfPages = 281,
                            Price = 15.99f,
                            PublisherId = 3,
                            YearOfRelease = new DateTime(1960, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 6,
                            BookName = "The Catcher in the Rye",
                            ContinuationBook = "",
                            Cost = 11.99f,
                            GenreId = 1,
                            NumberOfPages = 214,
                            Price = 17.99f,
                            PublisherId = 4,
                            YearOfRelease = new DateTime(1951, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 7,
                            BookName = "The Diary of a Young Girl",
                            ContinuationBook = "",
                            Cost = 12.5f,
                            GenreId = 2,
                            NumberOfPages = 283,
                            Price = 18.5f,
                            PublisherId = 5,
                            YearOfRelease = new DateTime(1947, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 8,
                            BookName = "Sapiens: A Brief History of Humankind",
                            ContinuationBook = "",
                            Cost = 18.99f,
                            GenreId = 5,
                            NumberOfPages = 443,
                            Price = 27.99f,
                            PublisherId = 6,
                            YearOfRelease = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Classic Literature"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Memoir"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Dystopian Fiction"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Southern Gothic"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Non-Fiction"
                        });
                });

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherId"));

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            PublisherName = "Scribner"
                        },
                        new
                        {
                            PublisherId = 2,
                            PublisherName = "Crown Publishing Group"
                        },
                        new
                        {
                            PublisherId = 3,
                            PublisherName = "Harcourt Brace Jovanovich"
                        },
                        new
                        {
                            PublisherId = 4,
                            PublisherName = "Little, Brown and Company"
                        },
                        new
                        {
                            PublisherId = 5,
                            PublisherName = "J.B. Lippincott & Co."
                        },
                        new
                        {
                            PublisherId = 6,
                            PublisherName = "HarperCollins"
                        },
                        new
                        {
                            PublisherId = 7,
                            PublisherName = "Viking Press"
                        },
                        new
                        {
                            PublisherId = 8,
                            PublisherName = "Harper"
                        });
                });

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Book", b =>
                {
                    b.HasOne("Bookstore_Data_Access.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookstore_Data_Access.Entities.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookstore_Data_Access.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Bookstore_Data_Access.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
